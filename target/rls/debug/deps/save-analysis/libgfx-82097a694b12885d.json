{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2","program":"C:\\Users\\Kryssou\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","gfx","C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=82097a694b12885d","-C","extra-filename=-82097a694b12885d","--out-dir","c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps","--extern","draw_state=c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps\\libdraw_state-bb26f431e80d6f94.rmeta","--extern","gfx_core=c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps\\libgfx_core-9a5d510d56927a0a.rmeta","--extern","log=c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps\\liblog-99f8d0d97b045069.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Kryssou\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Kryssou\\linear_regression\\target\\rls\\debug\\deps\\libgfx-82097a694b12885d.rmeta"},"prelude":{"crate_id":{"name":"gfx","disambiguator":[2639765097469008914,2147503312919525393]},"crate_root":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src","external_crates":[{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":1,"id":{"name":"std","disambiguator":[16642036008811604029,14087435891705524500]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4499711242158236150,9053830658036687371]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17224356990044850570,13379053275098731249]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[7615031080392657429,3411900645351455725]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[8330623902902508933,4303386722719547299]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6593546285327202447,4354075130114051137]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[14158194144609339124,11827967466325659322]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12220570876513985859,9402837045207347641]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[9311698047747766129,12220426127395329585]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10500967460204064855,11584230681886977953]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[8711568432711540928,3673532608996807454]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[10335211106260019529,6814012896909386892]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[13315774841328165574,7173343162267709239]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":14,"id":{"name":"log","disambiguator":[2191242384019703701,13216350496639280537]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":15,"id":{"name":"log","disambiguator":[3852262132065420326,12401975850081918630]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":16,"id":{"name":"cfg_if","disambiguator":[4477650143662095228,3050971908263318510]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":17,"id":{"name":"draw_state","disambiguator":[11807164711316492609,11549432011807888941]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":18,"id":{"name":"bitflags","disambiguator":[7400857611512378324,667738257832915283]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":19,"id":{"name":"gfx_core","disambiguator":[10943909607053817674,10485722772531590033]}},{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","num":20,"id":{"name":"bitflags","disambiguator":[1045670582649920192,5860161577472346816]}}],"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":600,"byte_end":2647,"line_start":15,"line_end":72,"column_start":1,"column_end":16}},"imports":[{"kind":"Use","ref_id":{"krate":19,"index":817},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":922,"byte_end":928,"line_start":27,"line_end":27,"column_start":24,"column_end":30},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":19,"index":171},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":930,"byte_end":937,"line_start":27,"line_end":27,"column_start":32,"column_end":39},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":19,"index":824},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":939,"byte_end":950,"line_start":27,"line_end":27,"column_start":41,"column_end":52},"alias_span":null,"name":"DeviceFence","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":974,"byte_end":984,"line_start":28,"line_end":28,"column_start":22,"column_end":32},"alias_span":null,"name":"FactoryExt","value":"","parent":{"krate":0,"index":6}},{"kind":"Use","ref_id":{"krate":17,"index":4},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1035,"byte_end":1041,"line_start":32,"line_end":32,"column_start":22,"column_end":28},"alias_span":null,"name":"preset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":17,"index":22},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1043,"byte_end":1048,"line_start":32,"line_end":32,"column_start":30,"column_end":35},"alias_span":null,"name":"state","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1079,"byte_end":1080,"line_start":33,"line_end":33,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":817},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1123,"byte_end":1129,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"alias_span":null,"name":"Device","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":805},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1131,"byte_end":1140,"line_start":36,"line_end":36,"column_start":28,"column_end":37},"alias_span":null,"name":"Resources","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4514},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1142,"byte_end":1151,"line_start":36,"line_end":36,"column_start":39,"column_end":48},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":782},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1173,"byte_end":1184,"line_start":37,"line_end":37,"column_start":20,"column_end":31},"alias_span":null,"name":"VertexCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":783},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1186,"byte_end":1199,"line_start":37,"line_end":37,"column_start":33,"column_end":46},"alias_span":null,"name":"InstanceCount","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":791},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1221,"byte_end":1230,"line_start":38,"line_end":38,"column_start":20,"column_end":29},"alias_span":null,"name":"ShaderSet","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4462},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1232,"byte_end":1244,"line_start":38,"line_end":38,"column_start":31,"column_end":43},"alias_span":null,"name":"VertexShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4469},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1246,"byte_end":1256,"line_start":38,"line_end":38,"column_start":45,"column_end":55},"alias_span":null,"name":"HullShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4476},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1258,"byte_end":1270,"line_start":38,"line_end":38,"column_start":57,"column_end":69},"alias_span":null,"name":"DomainShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4483},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1291,"byte_end":1305,"line_start":39,"line_end":39,"column_start":20,"column_end":34},"alias_span":null,"name":"GeometryShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":4490},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1307,"byte_end":1318,"line_start":39,"line_end":39,"column_start":36,"column_end":47},"alias_span":null,"name":"PixelShader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":239},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1340,"byte_end":1346,"line_start":40,"line_end":40,"column_start":20,"column_end":26},"alias_span":null,"name":"format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":308},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1348,"byte_end":1354,"line_start":40,"line_end":40,"column_start":28,"column_end":34},"alias_span":null,"name":"handle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":707},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1356,"byte_end":1359,"line_start":40,"line_end":40,"column_start":36,"column_end":39},"alias_span":null,"name":"tex","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":171},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1390,"byte_end":1397,"line_start":41,"line_end":41,"column_start":29,"column_end":36},"alias_span":null,"name":"Factory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":136},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1399,"byte_end":1404,"line_start":41,"line_end":41,"column_start":38,"column_end":43},"alias_span":null,"name":"Typed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1057},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1406,"byte_end":1411,"line_start":41,"line_end":41,"column_start":45,"column_end":50},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":939},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1413,"byte_end":1417,"line_start":41,"line_end":41,"column_start":52,"column_end":56},"alias_span":null,"name":"Bind","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":910},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1419,"byte_end":1428,"line_start":41,"line_end":41,"column_start":58,"column_end":67},"alias_span":null,"name":"MapAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1036},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1458,"byte_end":1468,"line_start":42,"line_end":42,"column_start":29,"column_end":39},"alias_span":null,"name":"BufferRole","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1090},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1470,"byte_end":1480,"line_start":42,"line_end":42,"column_start":41,"column_end":51},"alias_span":null,"name":"BufferInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1111},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1482,"byte_end":1493,"line_start":42,"line_end":42,"column_start":53,"column_end":64},"alias_span":null,"name":"BufferError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1132},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1495,"byte_end":1512,"line_start":42,"line_end":42,"column_start":66,"column_end":83},"alias_span":null,"name":"BufferUpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1142},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1542,"byte_end":1559,"line_start":43,"line_end":43,"column_start":29,"column_end":46},"alias_span":null,"name":"ResourceViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1158},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1561,"byte_end":1576,"line_start":43,"line_end":43,"column_start":48,"column_end":63},"alias_span":null,"name":"TargetViewError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":1180},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1579,"byte_end":1592,"line_start":43,"line_end":43,"column_start":66,"column_end":79},"alias_span":null,"name":"CombinedError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":935},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1622,"byte_end":1635,"line_start":44,"line_end":44,"column_start":29,"column_end":42},"alias_span":null,"name":"RENDER_TARGET","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":936},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1637,"byte_end":1650,"line_start":44,"line_end":44,"column_start":44,"column_end":57},"alias_span":null,"name":"DEPTH_STENCIL","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":937},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1652,"byte_end":1667,"line_start":44,"line_end":44,"column_start":59,"column_end":74},"alias_span":null,"name":"SHADER_RESOURCE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":938},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1669,"byte_end":1685,"line_start":44,"line_end":44,"column_start":76,"column_end":92},"alias_span":null,"name":"UNORDERED_ACCESS","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":140},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1715,"byte_end":1725,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"alias_span":null,"name":"cast_slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":26},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1753,"byte_end":1766,"line_start":46,"line_end":46,"column_start":26,"column_end":39},"alias_span":null,"name":"CommandBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":25},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1768,"byte_end":1782,"line_start":46,"line_end":46,"column_start":41,"column_end":55},"alias_span":null,"name":"InstanceOption","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":3752},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1811,"byte_end":1822,"line_start":47,"line_end":47,"column_start":27,"column_end":38},"alias_span":null,"name":"ProgramInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":3463},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1824,"byte_end":1836,"line_start":47,"line_end":47,"column_start":40,"column_end":52},"alias_span":null,"name":"UniformValue","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1858,"byte_end":1865,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1867,"byte_end":1878,"line_start":49,"line_end":49,"column_start":28,"column_end":39},"alias_span":null,"name":"UpdateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1898,"byte_end":1916,"line_start":50,"line_end":50,"column_start":18,"column_end":36},"alias_span":null,"name":"PipelineStateError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1934,"byte_end":1939,"line_start":51,"line_end":51,"column_start":17,"column_end":22},"alias_span":null,"name":"Slice","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1941,"byte_end":1956,"line_start":51,"line_end":51,"column_start":24,"column_end":39},"alias_span":null,"name":"IntoIndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1958,"byte_end":1969,"line_start":51,"line_end":51,"column_start":41,"column_end":52},"alias_span":null,"name":"IndexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":1986,"byte_end":1999,"line_start":52,"line_end":52,"column_start":15,"column_end":28},"alias_span":null,"name":"PipelineState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2024,"byte_end":2036,"line_start":53,"line_end":53,"column_start":23,"column_end":35},"alias_span":null,"name":"VertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2038,"byte_end":2052,"line_start":53,"line_end":53,"column_start":37,"column_end":51},"alias_span":null,"name":"InstanceBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2054,"byte_end":2069,"line_start":53,"line_end":53,"column_start":53,"column_end":68},"alias_span":null,"name":"RawVertexBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2093,"byte_end":2110,"line_start":54,"line_end":54,"column_start":23,"column_end":40},"alias_span":null,"name":"RawConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2112,"byte_end":2126,"line_start":54,"line_end":54,"column_start":42,"column_end":56},"alias_span":null,"name":"ConstantBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2128,"byte_end":2134,"line_start":54,"line_end":54,"column_start":58,"column_end":64},"alias_span":null,"name":"Global","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2161,"byte_end":2175,"line_start":55,"line_end":55,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2177,"byte_end":2194,"line_start":55,"line_end":55,"column_start":41,"column_end":58},"alias_span":null,"name":"RawShaderResource","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2196,"byte_end":2211,"line_start":55,"line_end":55,"column_start":60,"column_end":75},"alias_span":null,"name":"UnorderedAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2237,"byte_end":2244,"line_start":56,"line_end":56,"column_start":25,"column_end":32},"alias_span":null,"name":"Sampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2246,"byte_end":2260,"line_start":56,"line_end":56,"column_start":34,"column_end":48},"alias_span":null,"name":"TextureSampler","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2285,"byte_end":2303,"line_start":57,"line_end":57,"column_start":23,"column_end":41},"alias_span":null,"name":"DepthStencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2305,"byte_end":2316,"line_start":57,"line_end":57,"column_start":43,"column_end":54},"alias_span":null,"name":"DepthTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2318,"byte_end":2331,"line_start":57,"line_end":57,"column_start":56,"column_end":69},"alias_span":null,"name":"StencilTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2355,"byte_end":2367,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"RenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2369,"byte_end":2384,"line_start":58,"line_end":58,"column_start":37,"column_end":52},"alias_span":null,"name":"RawRenderTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2386,"byte_end":2397,"line_start":58,"line_end":58,"column_start":54,"column_end":65},"alias_span":null,"name":"BlendTarget","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2399,"byte_end":2407,"line_start":58,"line_end":58,"column_start":67,"column_end":75},"alias_span":null,"name":"BlendRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2409,"byte_end":2416,"line_start":58,"line_end":58,"column_start":77,"column_end":84},"alias_span":null,"name":"Scissor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2441,"byte_end":2447,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Bundle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":19,"index":3164},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40322,"byte_end":40329,"line_start":25,"line_end":25,"column_start":25,"column_end":32},"alias_span":null,"name":"Element","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":19,"index":643},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40331,"byte_end":40341,"line_start":25,"line_end":25,"column_start":34,"column_end":44},"alias_span":null,"name":"ElemOffset","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":19,"index":644},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40343,"byte_end":40353,"line_start":25,"line_end":25,"column_start":46,"column_end":56},"alias_span":null,"name":"ElemStride","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":19,"index":645},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40355,"byte_end":40367,"line_start":25,"line_end":25,"column_start":58,"column_end":70},"alias_span":null,"name":"InstanceRate","value":"","parent":{"krate":0,"index":251}},{"kind":"Use","ref_id":{"krate":19,"index":3192},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31194,"byte_end":31204,"line_start":51,"line_end":51,"column_start":25,"column_end":35},"alias_span":null,"name":"Descriptor","value":"","parent":{"krate":0,"index":250}},{"kind":"Use","ref_id":{"krate":19,"index":683},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62935,"byte_end":62946,"line_start":17,"line_end":17,"column_start":27,"column_end":38},"alias_span":null,"name":"ConstFormat","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":19,"index":686},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62948,"byte_end":62957,"line_start":17,"line_end":17,"column_start":40,"column_end":49},"alias_span":null,"name":"Formatted","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":19,"index":3567},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62959,"byte_end":62964,"line_start":17,"line_end":17,"column_start":51,"column_end":56},"alias_span":null,"name":"Usage","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":19,"index":665},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62985,"byte_end":62990,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"alias_span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62994,"byte_end":62998,"line_start":18,"line_end":18,"column_start":28,"column_end":32},"name":"core","value":"","parent":{"krate":0,"index":677}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":600,"byte_end":2647,"line_start":15,"line_end":72,"column_start":1,"column_end":16},"name":"","qualname":"::","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":75},{"krate":0,"index":81},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":157},{"krate":0,"index":215},{"krate":0,"index":250},{"krate":0,"index":677},{"krate":0,"index":693}],"decl_id":null,"docs":" An efficient, low-level, bindless graphics API for Rust. See [the\n blog](http://gfx-rs.github.io/) for explanations and annotated examples.\n","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":600,"byte_end":622,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"! An efficient, low-level, bindless graphics API for Rust. See [the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":624,"byte_end":693,"line_start":17,"line_end":17,"column_start":1,"column_end":70}},{"value":"! blog](http://gfx-rs.github.io/) for explanations and annotated examples.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":694,"byte_end":770,"line_start":18,"line_end":18,"column_start":1,"column_end":77}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":890,"byte_end":896,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"name":"traits","qualname":"::traits","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":11}],"decl_id":null,"docs":" public re-exported traits\n","sig":null,"attributes":[{"value":"/ public re-exported traits","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":852,"byte_end":881,"line_start":25,"line_end":25,"column_start":1,"column_end":30}}]},{"kind":"StructVariant","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3723,"byte_end":3734,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"OutOfBounds","qualname":"::encoder::UpdateError::OutOfBounds","value":"UpdateError::OutOfBounds { target, source }","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":709},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3786,"byte_end":3803,"line_start":40,"line_end":40,"column_start":5,"column_end":22},"name":"UnitCountMismatch","qualname":"::encoder::UpdateError::UnitCountMismatch","value":"UpdateError::UnitCountMismatch { target, slice }","parent":{"krate":0,"index":704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":704},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3702,"byte_end":3713,"line_start":35,"line_end":35,"column_start":10,"column_end":21},"name":"UpdateError","qualname":"::encoder::UpdateError","value":"UpdateError::{OutOfBounds, UnitCountMismatch}","parent":null,"children":[{"krate":0,"index":706},{"krate":0,"index":709}],"decl_id":null,"docs":" An error occuring in buffer/texture updates.\n","sig":null,"attributes":[{"value":"/ An error occuring in buffer/texture updates.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3586,"byte_end":3634,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3635,"byte_end":3657,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5365,"byte_end":5372,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::encoder::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126}],"decl_id":null,"docs":" Graphics Command Encoder","sig":null,"attributes":[{"value":"/ Graphics Command Encoder","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4643,"byte_end":4671,"line_start":66,"line_end":66,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4672,"byte_end":4675,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4676,"byte_end":4690,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/ The `Encoder` is a wrapper structure around a `CommandBuffer`. It is responsible for sending","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4691,"byte_end":4787,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/ commands to the `CommandBuffer`. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4788,"byte_end":4825,"line_start":70,"line_end":70,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4826,"byte_end":4829,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4830,"byte_end":4859,"line_start":72,"line_end":72,"column_start":1,"column_end":30}},{"value":"/ The `Encoder` implements `From<CommandBuffer>`, which is how it is constructed. There is no","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4860,"byte_end":4955,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ cross-API way to create a `CommandBuffer`, however, an API back-end should expose a function to","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4956,"byte_end":5055,"line_start":74,"line_end":74,"column_start":1,"column_end":100}},{"value":"/ create one in its `Factory` type. See the specific back-end for details on how to construct a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5056,"byte_end":5153,"line_start":75,"line_end":75,"column_start":1,"column_end":98}},{"value":"/ `CommandBuffer`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5154,"byte_end":5174,"line_start":76,"line_end":76,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5175,"byte_end":5178,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The encoder exposes multiple functions that add commands to its internal `CommandBuffer`. To ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5179,"byte_end":5276,"line_start":78,"line_end":78,"column_start":1,"column_end":98}},{"value":"/ submit these commands to the GPU so they can be rendered, call `flush`. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5277,"byte_end":5353,"line_start":79,"line_end":79,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6378,"byte_end":6383,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"flush","qualname":"<Encoder<R, C>>::flush","value":"fn <D> (&mut self, device: &mut D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can\n be executed. \n \n Calling `flush` before swapping buffers is critical as without it the commands of the\n internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be\n processed. Calling flush too often however will result in a performance hit. It is\n generally recommended to call flush once per frame, when all draw calls have been made. \n","sig":null,"attributes":[{"value":"/ Submits the commands in this `Encoder`'s internal `CommandBuffer` to the GPU, so they can","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5863,"byte_end":5956,"line_start":97,"line_end":97,"column_start":5,"column_end":98}},{"value":"/ be executed. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5961,"byte_end":5978,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/ ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5983,"byte_end":5987,"line_start":99,"line_end":99,"column_start":5,"column_end":9}},{"value":"/ Calling `flush` before swapping buffers is critical as without it the commands of the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5992,"byte_end":6081,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ internal ´CommandBuffer´ will not be sent to the GPU, and as a result they will not be","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6086,"byte_end":6178,"line_start":101,"line_end":101,"column_start":5,"column_end":95}},{"value":"/ processed. Calling flush too often however will result in a performance hit. It is","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6183,"byte_end":6269,"line_start":102,"line_end":102,"column_start":5,"column_end":91}},{"value":"/ generally recommended to call flush once per frame, when all draw calls have been made. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6274,"byte_end":6366,"line_start":103,"line_end":103,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6727,"byte_end":6738,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"clone_empty","qualname":"<Encoder<R, C>>::clone_empty","value":"fn (&self) -> Encoder<R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clone the renderer shared data but ignore the commands.\n","sig":null,"attributes":[{"value":"/ Clone the renderer shared data but ignore the commands.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6656,"byte_end":6715,"line_start":113,"line_end":113,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":7015,"byte_end":7028,"line_start":123,"line_end":123,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<Encoder<R, C>>::update_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &[T], offset_elements: usize) -> Result<(), UpdateError<usize>>","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a slice of data.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a slice of data.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":6962,"byte_end":7003,"line_start":122,"line_end":122,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":7885,"byte_end":7907,"line_start":147,"line_end":147,"column_start":12,"column_end":34},"name":"update_constant_buffer","qualname":"<Encoder<R, C>>::update_constant_buffer","value":"fn <T> (&mut self, buf: &handle::Buffer<R, T>, data: &T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Update a buffer with a single structure.\n","sig":null,"attributes":[{"value":"/ Update a buffer with a single structure.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":7829,"byte_end":7873,"line_start":146,"line_end":146,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":8288,"byte_end":8302,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"update_texture","qualname":"<Encoder<R, C>>::update_texture","value":"fn <S, T> (&mut self, tex: &handle::Texture<R, T::Surface>, face: Option<tex::CubeFace>, img: tex::NewImageInfo, data: &[S::DataType]) -> Result<(), UpdateError<[tex::Size; 3]>>","parent":null,"children":[],"decl_id":null,"docs":" Update the contents of a texture.\n","sig":null,"attributes":[{"value":"/ Update the contents of a texture.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":8239,"byte_end":8276,"line_start":156,"line_end":156,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":10687,"byte_end":10692,"line_start":217,"line_end":217,"column_start":12,"column_end":17},"name":"clear","qualname":"<Encoder<R, C>>::clear","value":"fn <T> (&mut self, view: &handle::RenderTargetView<R, T>, value: T::View) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears the supplied `RenderTargetView` to the supplied `ClearColor`.\n","sig":null,"attributes":[{"value":"/ Clears the supplied `RenderTargetView` to the supplied `ClearColor`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":10603,"byte_end":10675,"line_start":216,"line_end":216,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":11038,"byte_end":11049,"line_start":224,"line_end":224,"column_start":12,"column_end":23},"name":"clear_depth","qualname":"<Encoder<R, C>>::clear_depth","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, depth: Depth) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a depth view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a depth view with a specified value.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":10980,"byte_end":11026,"line_start":223,"line_end":223,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":11372,"byte_end":11385,"line_start":231,"line_end":231,"column_start":12,"column_end":25},"name":"clear_stencil","qualname":"<Encoder<R, C>>::clear_stencil","value":"fn <T> (&mut self, view: &handle::DepthStencilView<R, T>, stencil: Stencil) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear a stencil view with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear a stencil view with a specified value.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":11312,"byte_end":11360,"line_start":230,"line_end":230,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":11762,"byte_end":11766,"line_start":238,"line_end":238,"column_start":12,"column_end":16},"name":"draw","qualname":"<Encoder<R, C>>::draw","value":"fn <D> (&mut self, slice: &slice::Slice<R>, pipeline: &pso::PipelineState<R, D::Meta>, user_data: &D) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.\n","sig":null,"attributes":[{"value":"/ Draws a `slice::Slice` using a pipeline state object, and its matching `Data` structure.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":11658,"byte_end":11750,"line_start":237,"line_end":237,"column_start":5,"column_end":97}}]},{"kind":"TupleVariant","id":{"krate":0,"index":725},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14516,"byte_end":14523,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Program","qualname":"::factory::PipelineStateError::Program","value":"PipelineStateError::Program(ProgramError)","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Shader program failed to link.\n","sig":null,"attributes":[{"value":"/ Shader program failed to link.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14477,"byte_end":14511,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":728},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14610,"byte_end":14624,"line_start":37,"line_end":37,"column_start":5,"column_end":19},"name":"DescriptorInit","qualname":"::factory::PipelineStateError::DescriptorInit","value":"PipelineStateError::DescriptorInit(pso::InitError)","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Unable to create PSO descriptor due to mismatched formats.\n","sig":null,"attributes":[{"value":"/ Unable to create PSO descriptor due to mismatched formats.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14543,"byte_end":14605,"line_start":36,"line_end":36,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":731},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14710,"byte_end":14722,"line_start":39,"line_end":39,"column_start":5,"column_end":17},"name":"DeviceCreate","qualname":"::factory::PipelineStateError::DeviceCreate","value":"PipelineStateError::DeviceCreate(CreationError)","parent":{"krate":0,"index":724},"children":[],"decl_id":null,"docs":" Device failed to create the handle give the descriptor.\n","sig":null,"attributes":[{"value":"/ Device failed to create the handle give the descriptor.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14646,"byte_end":14705,"line_start":38,"line_end":38,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14452,"byte_end":14470,"line_start":33,"line_end":33,"column_start":10,"column_end":28},"name":"PipelineStateError","qualname":"::factory::PipelineStateError","value":"PipelineStateError::{Program, DescriptorInit, DeviceCreate}","parent":null,"children":[{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":731}],"decl_id":null,"docs":" Error creating a PipelineState\n","sig":null,"attributes":[{"value":"/ Error creating a PipelineState","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14373,"byte_end":14407,"line_start":31,"line_end":31,"column_start":1,"column_end":35}}]},{"kind":"Trait","id":{"krate":0,"index":193},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16568,"byte_end":16578,"line_start":91,"line_end":91,"column_start":11,"column_end":21},"name":"FactoryExt","qualname":"::factory::FactoryExt","value":"FactoryExt<R: Resources>: Factory<R>","parent":null,"children":[{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":211}],"decl_id":null,"docs":" This trait is responsible for creating and managing graphics resources, much like the `Factory`\n trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. \n","sig":null,"attributes":[{"value":"/ This trait is responsible for creating and managing graphics resources, much like the `Factory`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16372,"byte_end":16471,"line_start":89,"line_end":89,"column_start":1,"column_end":100}},{"value":"/ trait in the `gfx` crate. Every `Factory` automatically implements `FactoryExt`. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16472,"byte_end":16557,"line_start":90,"line_end":90,"column_start":1,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16725,"byte_end":16745,"line_start":94,"line_end":94,"column_start":8,"column_end":28},"name":"create_vertex_buffer","qualname":"::factory::FactoryExt::create_vertex_buffer","value":"fn <T> (&mut self, vertices: &[T]) -> handle::Buffer<R, T>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Create a vertex buffer from the supplied data. A `Slice` will have to manually be\n constructed.\n","sig":null,"attributes":[{"value":"/ Create a vertex buffer from the supplied data. A `Slice` will have to manually be","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16611,"byte_end":16696,"line_start":92,"line_end":92,"column_start":5,"column_end":90}},{"value":"/ constructed.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16701,"byte_end":16717,"line_start":93,"line_end":93,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":17233,"byte_end":17264,"line_start":104,"line_end":104,"column_start":8,"column_end":39},"name":"create_vertex_buffer_with_slice","qualname":"::factory::FactoryExt::create_vertex_buffer_with_slice","value":"fn <B, V> (&mut self, vertices: &[V], indices: B) -> (handle::Buffer<R, V>, Slice<R>)","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Shorthand for creating a new vertex buffer from the supplied vertices, together with a\n `Slice` from the supplied indices.\n","sig":null,"attributes":[{"value":"/ Shorthand for creating a new vertex buffer from the supplied vertices, together with a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":17092,"byte_end":17182,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"/ `Slice` from the supplied indices.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":17187,"byte_end":17225,"line_start":103,"line_end":103,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":18192,"byte_end":18214,"line_start":127,"line_end":127,"column_start":8,"column_end":30},"name":"create_constant_buffer","qualname":"::factory::FactoryExt::create_constant_buffer","value":"fn <T> (&mut self, num: usize) -> handle::Buffer<R, T>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Create a constant buffer for `num` identical elements of type `T`.\n","sig":null,"attributes":[{"value":"/ Create a constant buffer for `num` identical elements of type `T`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":18114,"byte_end":18184,"line_start":126,"line_end":126,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":18464,"byte_end":18481,"line_start":133,"line_end":133,"column_start":8,"column_end":25},"name":"create_shader_set","qualname":"::factory::FactoryExt::create_shader_set","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<ShaderSet<R>, ProgramError>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Creates a `ShaderSet` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a `ShaderSet` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":18376,"byte_end":18456,"line_start":132,"line_end":132,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19044,"byte_end":19056,"line_start":147,"line_end":147,"column_start":8,"column_end":20},"name":"link_program","qualname":"::factory::FactoryExt::link_program","value":"fn (&mut self, vs_code: &[u8], ps_code: &[u8]) -> Result<handle::Program<R>, ProgramError>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Creates a basic shader `Program` from the supplied vertex and pixel shader source code.\n","sig":null,"attributes":[{"value":"/ Creates a basic shader `Program` from the supplied vertex and pixel shader source code.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":18945,"byte_end":19036,"line_start":146,"line_end":146,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19439,"byte_end":19460,"line_start":156,"line_end":156,"column_start":8,"column_end":29},"name":"create_pipeline_state","qualname":"::factory::FactoryExt::create_pipeline_state","value":"fn <I> (&mut self, shaders: &ShaderSet<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a\n shader `Program`.  \n","sig":null,"attributes":[{"value":"/ Similar to `create_pipeline_from_program(..)`, but takes a `ShaderSet` as opposed to a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19313,"byte_end":19403,"line_start":154,"line_end":154,"column_start":5,"column_end":95}},{"value":"/ shader `Program`.  ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19408,"byte_end":19431,"line_start":155,"line_end":155,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":20035,"byte_end":20063,"line_start":166,"line_end":166,"column_start":8,"column_end":36},"name":"create_pipeline_from_program","qualname":"::factory::FactoryExt::create_pipeline_from_program","value":"fn <I> (&mut self, program: &handle::Program<R>, primitive: Primitive, rasterizer: state::Rasterizer, init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a\n primitive type and a `Rasterizer`.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure, a shader `Program`, a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19891,"byte_end":19984,"line_start":164,"line_end":164,"column_start":5,"column_end":98}},{"value":"/ primitive type and a `Rasterizer`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":19989,"byte_end":20027,"line_start":165,"line_end":165,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":20876,"byte_end":20898,"line_start":180,"line_end":180,"column_start":8,"column_end":30},"name":"create_pipeline_simple","qualname":"::factory::FactoryExt::create_pipeline_simple","value":"fn <I> (&mut self, vs: &[u8], ps: &[u8], init: I) -> Result<pso::PipelineState<R, I::Meta>, PipelineStateError>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a\n shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable\n of rendering triangle faces without culling.\n","sig":null,"attributes":[{"value":"/ Creates a strongly typed `PipelineState` from its `Init` structure. Automatically creates a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":20622,"byte_end":20717,"line_start":177,"line_end":177,"column_start":5,"column_end":100}},{"value":"/ shader `Program` from a vertex and pixel shader source, as well as a `Rasterizer` capable","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":20722,"byte_end":20815,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/ of rendering triangle faces without culling.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":20820,"byte_end":20868,"line_start":179,"line_end":179,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":21326,"byte_end":21347,"line_start":189,"line_end":189,"column_start":8,"column_end":29},"name":"create_sampler_linear","qualname":"::factory::FactoryExt::create_sampler_linear","value":"fn (&mut self) -> handle::Sampler<R>","parent":{"krate":0,"index":193},"children":[],"decl_id":null,"docs":" Create a linear sampler with clamping to border.\n","sig":null,"attributes":[{"value":"/ Create a linear sampler with clamping to border.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":21266,"byte_end":21318,"line_start":188,"line_end":188,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":743},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24390,"byte_end":24395,"line_start":58,"line_end":58,"column_start":12,"column_end":17},"name":"Slice","qualname":"::slice::Slice","value":"Slice { start, end, base_vertex, instances, buffer }","parent":null,"children":[{"krate":0,"index":745},{"krate":0,"index":746},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":749}],"decl_id":null,"docs":" A `Slice` dictates in which and in what order vertices get processed. It is required for\n processing a PSO.","sig":null,"attributes":[{"value":"/ A `Slice` dictates in which and in what order vertices get processed. It is required for","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22472,"byte_end":22564,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"/ processing a PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22565,"byte_end":22586,"line_start":27,"line_end":27,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22587,"byte_end":22590,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22591,"byte_end":22605,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/ A `Slice` object in essence dictates in what order the vertices in a `VertexBuffer` get","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22606,"byte_end":22697,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ processed. To do this, it contains an internal index-buffer. This `Buffer` is a list of","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22698,"byte_end":22789,"line_start":31,"line_end":31,"column_start":1,"column_end":92}},{"value":"/ indices into this `VertexBuffer` (vertex-index). A vertex-index of 0 represents the first","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22790,"byte_end":22883,"line_start":32,"line_end":32,"column_start":1,"column_end":94}},{"value":"/ vertex in the `VertexBuffer`, a vertex-index of 1 represents the second, 2 represents the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22884,"byte_end":22977,"line_start":33,"line_end":33,"column_start":1,"column_end":94}},{"value":"/ third, and so on. The vertex-indices in the index-buffer are read in order; every vertex-index","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":22978,"byte_end":23076,"line_start":34,"line_end":34,"column_start":1,"column_end":99}},{"value":"/ tells the pipeline which vertex to process next. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23077,"byte_end":23130,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23131,"byte_end":23134,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ Because the same index can re-appear multiple times, duplicate-vertices can be avoided. For","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23135,"byte_end":23230,"line_start":37,"line_end":37,"column_start":1,"column_end":96}},{"value":"/ instance, if you want to draw a square, you need two triangles, and thus six vertices. Because","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23231,"byte_end":23329,"line_start":38,"line_end":38,"column_start":1,"column_end":99}},{"value":"/ the same index can reappear multiple times, this means we can instead use 4 vertices, and 6","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23330,"byte_end":23425,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"/ vertex-indices.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23426,"byte_end":23445,"line_start":40,"line_end":40,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23446,"byte_end":23449,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ This index-buffer has a few variants. See the `IndexBuffer` documentation for a detailed","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23450,"byte_end":23542,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"/ description.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23543,"byte_end":23559,"line_start":43,"line_end":43,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23560,"byte_end":23563,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ The `start` and `end` fields say where in the index-buffer to start and stop reading.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23564,"byte_end":23653,"line_start":45,"line_end":45,"column_start":1,"column_end":90}},{"value":"/ Setting `start` to 0, and `end` to the length of the index-buffer, will cause the entire","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23654,"byte_end":23746,"line_start":46,"line_end":46,"column_start":1,"column_end":93}},{"value":"/ index-buffer to be processed. The `base_vertex` dictates the index of the first vertex","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23747,"byte_end":23837,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ in the `VertexBuffer`. This essentially moves the the start of the `VertexBuffer`, to the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23838,"byte_end":23931,"line_start":48,"line_end":48,"column_start":1,"column_end":94}},{"value":"/ vertex with this index.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23932,"byte_end":23959,"line_start":49,"line_end":49,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23960,"byte_end":23963,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ # Constuction & Handling","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23964,"byte_end":23992,"line_start":51,"line_end":51,"column_start":1,"column_end":29}},{"value":"/ The `Slice` structure can be constructed automatically when using a `Factory` to create a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":23993,"byte_end":24086,"line_start":52,"line_end":52,"column_start":1,"column_end":94}},{"value":"/ vertex buffer. If needed, it can also be created manually.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24087,"byte_end":24149,"line_start":53,"line_end":53,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24150,"byte_end":24153,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ A `Slice` is required to process a PSO, as it contains the needed information on in what order","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24154,"byte_end":24252,"line_start":55,"line_end":55,"column_start":1,"column_end":99}},{"value":"/ to draw which vertices. As such, every `draw` call on an `Encoder` requires a `Slice`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24253,"byte_end":24343,"line_start":56,"line_end":56,"column_start":1,"column_end":91}}]},{"kind":"Field","id":{"krate":0,"index":745},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24534,"byte_end":24539,"line_start":61,"line_end":61,"column_start":9,"column_end":14},"name":"start","qualname":"::slice::Slice::start","value":"u32","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" The start index of the index-buffer. Processing will start at this location in the\n index-buffer. \n","sig":null,"attributes":[{"value":"/ The start index of the index-buffer. Processing will start at this location in the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24416,"byte_end":24502,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/ index-buffer. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24507,"byte_end":24525,"line_start":60,"line_end":60,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":746},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24684,"byte_end":24687,"line_start":64,"line_end":64,"column_start":9,"column_end":12},"name":"end","qualname":"::slice::Slice::end","value":"u32","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" The end index in the index-buffer. Processing will stop at this location (exclusive) in\n the index buffer.\n","sig":null,"attributes":[{"value":"/ The end index in the index-buffer. Processing will stop at this location (exclusive) in","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24558,"byte_end":24649,"line_start":62,"line_end":62,"column_start":5,"column_end":96}},{"value":"/ the index buffer.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24654,"byte_end":24675,"line_start":63,"line_end":63,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":747},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24928,"byte_end":24939,"line_start":68,"line_end":68,"column_start":9,"column_end":20},"name":"base_vertex","qualname":"::slice::Slice::base_vertex","value":"u32","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" This is the index of the first vertex in the `VertexBuffer`. This value will be added to\n every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this\n base-vertex.\n","sig":null,"attributes":[{"value":"/ This is the index of the first vertex in the `VertexBuffer`. This value will be added to","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24706,"byte_end":24798,"line_start":65,"line_end":65,"column_start":5,"column_end":97}},{"value":"/ every index in the index-buffer, effectively moving the start of the `VertexBuffer` to this","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24803,"byte_end":24898,"line_start":66,"line_end":66,"column_start":5,"column_end":100}},{"value":"/ base-vertex.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24903,"byte_end":24919,"line_start":67,"line_end":67,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":748},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24996,"byte_end":25005,"line_start":70,"line_end":70,"column_start":9,"column_end":18},"name":"instances","qualname":"::slice::Slice::instances","value":"std::option::Option<(u32, u32)>","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" Instancing configuration.\n","sig":null,"attributes":[{"value":"/ Instancing configuration.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":24958,"byte_end":24987,"line_start":69,"line_end":69,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":749},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25082,"byte_end":25088,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"name":"buffer","qualname":"::slice::Slice::buffer","value":"slice::IndexBuffer<R>","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":" Represents the type of index-buffer used. \n","sig":null,"attributes":[{"value":"/ Represents the type of index-buffer used. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25027,"byte_end":25073,"line_start":71,"line_end":71,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25246,"byte_end":25269,"line_start":77,"line_end":77,"column_start":12,"column_end":35},"name":"new_match_vertex_buffer","qualname":"<Slice<R>>::new_match_vertex_buffer","value":"fn <V> (vbuf: &handle::Buffer<R, V>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.\n","sig":null,"attributes":[{"value":"/ Creates a new `Slice` to match the supplied vertex buffer, from start to end, in order.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25143,"byte_end":25234,"line_start":76,"line_end":76,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25675,"byte_end":25689,"line_start":89,"line_end":89,"column_start":12,"column_end":26},"name":"get_prim_count","qualname":"<Slice<R>>::get_prim_count","value":"fn (&self, prim: Primitive) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Calculates the number of primitives of the specified type in this `Slice`.\n","sig":null,"attributes":[{"value":"/ Calculates the number of primitives of the specified type in this `Slice`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25585,"byte_end":25663,"line_start":88,"line_end":88,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":764},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27270,"byte_end":27274,"line_start":124,"line_end":124,"column_start":5,"column_end":9},"name":"Auto","qualname":"::slice::IndexBuffer::Auto","value":"IndexBuffer::Auto","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices\n get processed in order.\n","sig":null,"attributes":[{"value":"/ Represents a hypothetical index-buffer from 0 to infinity. In other words, all vertices","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27142,"byte_end":27233,"line_start":122,"line_end":122,"column_start":5,"column_end":96}},{"value":"/ get processed in order.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27238,"byte_end":27265,"line_start":123,"line_end":123,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":766},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27334,"byte_end":27341,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"Index16","qualname":"::slice::IndexBuffer::Index16","value":"IndexBuffer::Index16(handle::Buffer<R, u16>)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 16 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 16 bit indices.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27280,"byte_end":27329,"line_start":125,"line_end":125,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":769},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27425,"byte_end":27432,"line_start":128,"line_end":128,"column_start":5,"column_end":12},"name":"Index32","qualname":"::slice::IndexBuffer::Index32","value":"IndexBuffer::Index32(handle::Buffer<R, u32>)","parent":{"krate":0,"index":762},"children":[],"decl_id":null,"docs":" An index-buffer with unsigned 32 bit indices.\n","sig":null,"attributes":[{"value":"/ An index-buffer with unsigned 32 bit indices.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27371,"byte_end":27420,"line_start":127,"line_end":127,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":762},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27110,"byte_end":27121,"line_start":121,"line_end":121,"column_start":10,"column_end":21},"name":"IndexBuffer","qualname":"::slice::IndexBuffer","value":"IndexBuffer::{Auto, Index16, Index32}","parent":null,"children":[{"krate":0,"index":764},{"krate":0,"index":766},{"krate":0,"index":769}],"decl_id":null,"docs":" Type of index-buffer used in a Slice.","sig":null,"attributes":[{"value":"/ Type of index-buffer used in a Slice.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26019,"byte_end":26060,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26061,"byte_end":26064,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The `Auto` variant represents a hypothetical index-buffer from 0 to infinity. In other words,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26065,"byte_end":26162,"line_start":104,"line_end":104,"column_start":1,"column_end":98}},{"value":"/ all vertices get processed in order. Do note that the `Slice`' `start` and `end` restrictions","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26163,"byte_end":26260,"line_start":105,"line_end":105,"column_start":1,"column_end":98}},{"value":"/ still apply for this variant. To render every vertex in the `VertexBuffer`, you would set","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26261,"byte_end":26354,"line_start":106,"line_end":106,"column_start":1,"column_end":94}},{"value":"/ `start` to 0, and `end` to the `VertexBuffer`'s length.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26355,"byte_end":26414,"line_start":107,"line_end":107,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26415,"byte_end":26418,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ The `Index*` variants represent an actual `Buffer` with a list of vertex-indices. The numeric ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26419,"byte_end":26517,"line_start":109,"line_end":109,"column_start":1,"column_end":99}},{"value":"/ suffix specifies the amount of bits to use per index. Each of these also contains a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26518,"byte_end":26605,"line_start":110,"line_end":110,"column_start":1,"column_end":88}},{"value":"/ base-vertex. This is the index of the first vertex in the `VertexBuffer`. This value will be","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26606,"byte_end":26702,"line_start":111,"line_end":111,"column_start":1,"column_end":97}},{"value":"/ added to every index in the index-buffer, effectively moving the start of the `VertexBuffer` to","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26703,"byte_end":26802,"line_start":112,"line_end":112,"column_start":1,"column_end":100}},{"value":"/ this base-vertex.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26803,"byte_end":26824,"line_start":113,"line_end":113,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26825,"byte_end":26828,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ # Construction & Handling","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26829,"byte_end":26858,"line_start":115,"line_end":115,"column_start":1,"column_end":30}},{"value":"/ A `IndexBuffer` can be constructed using the `IntoIndexBuffer` trait, from either a slice or a","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26859,"byte_end":26957,"line_start":116,"line_end":116,"column_start":1,"column_end":99}},{"value":"/ `Buffer` of integers, using a factory.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":26958,"byte_end":27000,"line_start":117,"line_end":117,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27001,"byte_end":27004,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ An `IndexBuffer` is exclusively used to create `Slice`s.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27005,"byte_end":27065,"line_start":119,"line_end":119,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27654,"byte_end":27669,"line_start":137,"line_end":137,"column_start":11,"column_end":26},"name":"IntoIndexBuffer","qualname":"::slice::IntoIndexBuffer","value":"IntoIndexBuffer<R: Resources>","parent":null,"children":[{"krate":0,"index":239}],"decl_id":null,"docs":" A helper trait to create `IndexBuffers` from different kinds of data.\n","sig":null,"attributes":[{"value":"/ A helper trait to create `IndexBuffers` from different kinds of data.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27570,"byte_end":27643,"line_start":136,"line_end":136,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27735,"byte_end":27752,"line_start":139,"line_end":139,"column_start":8,"column_end":25},"name":"into_index_buffer","qualname":"::slice::IntoIndexBuffer::into_index_buffer","value":"fn <F> (self, factory: &mut F) -> IndexBuffer<R>","parent":{"krate":0,"index":237},"children":[],"decl_id":null,"docs":" Turns self into an `IndexBuffer`.\n","sig":null,"attributes":[{"value":"/ Turns self into an `IndexBuffer`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27690,"byte_end":27727,"line_start":138,"line_end":138,"column_start":5,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pso","qualname":"::pso","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":372},{"krate":0,"index":467},{"krate":0,"index":605},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629},{"krate":0,"index":802},{"krate":0,"index":813},{"krate":0,"index":631},{"krate":0,"index":816},{"krate":0,"index":851},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":845},{"krate":0,"index":635},{"krate":0,"index":637},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":646},{"krate":0,"index":653},{"krate":0,"index":659},{"krate":0,"index":673}],"decl_id":null,"docs":" A typed high-level graphics pipeline interface.","sig":null,"attributes":[{"value":"! A typed high-level graphics pipeline interface.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29519,"byte_end":29570,"line_start":15,"line_end":15,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29571,"byte_end":29574,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! # Overview","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29575,"byte_end":29589,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"! A `PipelineState` holds all information needed to manage a graphics pipeline. It contains","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29590,"byte_end":29683,"line_start":18,"line_end":18,"column_start":1,"column_end":94}},{"value":"! information about the shaders used, and on how to bind variables to these shaders. A ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29684,"byte_end":29773,"line_start":19,"line_end":19,"column_start":1,"column_end":90}},{"value":"! `PipelineState` manifests itself in the form of a Pipeline State Object, or PSO in short.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29774,"byte_end":29867,"line_start":20,"line_end":20,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29868,"byte_end":29871,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! A Pipeline State Object exists out of different components. Every component represents","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29872,"byte_end":29962,"line_start":22,"line_end":22,"column_start":1,"column_end":91}},{"value":"! a resource handle: a shader input or output/target. The types of these components can be found","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":29963,"byte_end":30061,"line_start":23,"line_end":23,"column_start":1,"column_end":99}},{"value":"! in this module's submodules, grouped by category.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30062,"byte_end":30115,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30116,"byte_end":30119,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"! Before all, a Pipeline State Object must be defined. This is done using the `gfx_pipeline`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30120,"byte_end":30214,"line_start":26,"line_end":26,"column_start":1,"column_end":95}},{"value":"! macro. This macro creates three different structures:","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30215,"byte_end":30272,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30273,"byte_end":30276,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! - The `Init` structure contains the location of every PSO component. During shader linking,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30277,"byte_end":30372,"line_start":29,"line_end":29,"column_start":1,"column_end":96}},{"value":"!   this is used to construct the `Meta` structure. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30373,"byte_end":30427,"line_start":30,"line_end":30,"column_start":1,"column_end":55}},{"value":"! - The `Meta` structure contains the layout of every PSO. Using the `Meta` structure, the right","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30428,"byte_end":30526,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"!   data is mapped to the right components.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30527,"byte_end":30572,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"! - The `Data` structure contains the data of all components, to be sent to the GPU. ","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30573,"byte_end":30660,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30661,"byte_end":30664,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"! # Construction and Handling","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30665,"byte_end":30696,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"! A Pipeline State Object is constructed by a factory, from its `Init` structure, a `Rasterizer`,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30697,"byte_end":30796,"line_start":36,"line_end":36,"column_start":1,"column_end":100}},{"value":"! a primitive type and a shader program.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30797,"byte_end":30839,"line_start":37,"line_end":37,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30840,"byte_end":30843,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! After construction an `Encoder` can use the PSO along with a `Data` structure matching that","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30844,"byte_end":30939,"line_start":39,"line_end":39,"column_start":1,"column_end":96}},{"value":"! PSO to process the shader pipeline, for instance, using the `draw` method.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":30940,"byte_end":31018,"line_start":40,"line_end":40,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":251},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"buffer","qualname":"::pso::buffer","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":257},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":317},{"krate":0,"index":323},{"krate":0,"index":325},{"krate":0,"index":333},{"krate":0,"index":337},{"krate":0,"index":344},{"krate":0,"index":349},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":367}],"decl_id":null,"docs":" Buffer components for a PSO.\n","sig":null,"attributes":[{"value":"! Buffer components for a PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":39991,"byte_end":40023,"line_start":15,"line_end":15,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40500,"byte_end":40509,"line_start":29,"line_end":29,"column_start":11,"column_end":20},"name":"Structure","qualname":"::pso::buffer::Structure","value":"Structure<F>","parent":null,"children":[{"krate":0,"index":277}],"decl_id":null,"docs":" A trait to be implemented by any struct having the layout described\n in the graphics API, like a vertex buffer.\n","sig":null,"attributes":[{"value":"/ A trait to be implemented by any struct having the layout described","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40371,"byte_end":40442,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ in the graphics API, like a vertex buffer.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40443,"byte_end":40489,"line_start":28,"line_end":28,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40568,"byte_end":40573,"line_start":31,"line_end":31,"column_start":8,"column_end":13},"name":"query","qualname":"::pso::buffer::Structure::query","value":"fn (&str) -> Option<Element<F>>","parent":{"krate":0,"index":275},"children":[],"decl_id":null,"docs":" Get the layout of an element by name.\n","sig":null,"attributes":[{"value":"/ Get the layout of an element by name.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40519,"byte_end":40560,"line_start":30,"line_end":30,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40739,"byte_end":40757,"line_start":36,"line_end":36,"column_start":12,"column_end":30},"name":"VertexBufferCommon","qualname":"::pso::buffer::VertexBufferCommon","value":"","parent":null,"children":[],"decl_id":null,"docs":" Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.\n","sig":null,"attributes":[{"value":"/ Service struct to simplify the implementations of `VertexBuffer` and `InstanceBuffer`.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40637,"byte_end":40727,"line_start":35,"line_end":35,"column_start":1,"column_end":91}}]},{"kind":"Type","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40903,"byte_end":40915,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"VertexBuffer","qualname":"::pso::buffer::VertexBuffer","value":"VertexBufferCommon<T, [(); 0]>","parent":null,"children":[],"decl_id":null,"docs":" Vertex buffer component. Advanced per vertex.\n - init: `()`\n - data: `Buffer<T>`\n","sig":null,"attributes":[{"value":"/ Vertex buffer component. Advanced per vertex.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40803,"byte_end":40852,"line_start":37,"line_end":37,"column_start":1,"column_end":50}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40853,"byte_end":40869,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40870,"byte_end":40893,"line_start":39,"line_end":39,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41046,"byte_end":41060,"line_start":42,"line_end":42,"column_start":10,"column_end":24},"name":"InstanceBuffer","qualname":"::pso::buffer::InstanceBuffer","value":"VertexBufferCommon<T, [(); 1]>","parent":null,"children":[],"decl_id":null,"docs":" Instance buffer component. Same as the vertex buffer but advances per instance.\n","sig":null,"attributes":[{"value":"/ Instance buffer component. Same as the vertex buffer but advances per instance.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":40953,"byte_end":41036,"line_start":41,"line_end":41,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41189,"byte_end":41204,"line_start":46,"line_end":46,"column_start":12,"column_end":27},"name":"RawVertexBuffer","qualname":"::pso::buffer::RawVertexBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw vertex/instance buffer component.\n - init: ?\n - data: `RawBuffer`\n","sig":null,"attributes":[{"value":"/ Raw vertex/instance buffer component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41098,"byte_end":41139,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ - init: ?","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41140,"byte_end":41153,"line_start":44,"line_end":44,"column_start":1,"column_end":14}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41154,"byte_end":41177,"line_start":45,"line_end":45,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41330,"byte_end":41344,"line_start":50,"line_end":50,"column_start":12,"column_end":26},"name":"ConstantBuffer","qualname":"::pso::buffer::ConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Constant buffer component.\n - init: `&str` = name of the buffer\n - data: `Buffer<T>`\n","sig":null,"attributes":[{"value":"/ Constant buffer component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41224,"byte_end":41254,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41255,"byte_end":41294,"line_start":48,"line_end":48,"column_start":1,"column_end":40}},{"value":"/ - data: `Buffer<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41295,"byte_end":41318,"line_start":49,"line_end":49,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":299},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41525,"byte_end":41542,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"RawConstantBuffer","qualname":"::pso::buffer::RawConstantBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw constant buffer component.\n - init: `&str` = name of the buffer\n - data: `RawBuffer`\n","sig":null,"attributes":[{"value":"/ Raw constant buffer component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41415,"byte_end":41449,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ - init: `&str` = name of the buffer","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41450,"byte_end":41489,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ - data: `RawBuffer`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41490,"byte_end":41513,"line_start":53,"line_end":53,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41838,"byte_end":41844,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"Global","qualname":"::pso::buffer::Global","value":"","parent":null,"children":[],"decl_id":null,"docs":" Global (uniform) constant component. Describes a free-standing value passed into\n the shader, which is not enclosed into any constant buffer. Deprecated in DX10 and higher.\n - init: `&str` = name of the constant\n - data: `T` = value\n","sig":null,"attributes":[{"value":"/ Global (uniform) constant component. Describes a free-standing value passed into","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41581,"byte_end":41665,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/ the shader, which is not enclosed into any constant buffer. Deprecated in DX10 and higher.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41666,"byte_end":41760,"line_start":56,"line_end":56,"column_start":1,"column_end":95}},{"value":"/ - init: `&str` = name of the constant","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41761,"byte_end":41802,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ - data: `T` = value","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":41803,"byte_end":41826,"line_start":58,"line_end":58,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"resource","qualname":"::pso::resource","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":389},{"krate":0,"index":394},{"krate":0,"index":397},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":410},{"krate":0,"index":417},{"krate":0,"index":422},{"krate":0,"index":428},{"krate":0,"index":432},{"krate":0,"index":439},{"krate":0,"index":444},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":462}],"decl_id":null,"docs":" Resource components for a PSO.\n","sig":null,"attributes":[{"value":"! Resource components for a PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47226,"byte_end":47260,"line_start":15,"line_end":15,"column_start":1,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":389},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47706,"byte_end":47720,"line_start":28,"line_end":28,"column_start":12,"column_end":26},"name":"ShaderResource","qualname":"::pso::resource::ShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Shader resource component (SRV). Typically is a view into some texture,\n but can also be a buffer.\n - init: `&str` = name of the resource\n - data: `ShaderResourceView<T>`\n","sig":null,"attributes":[{"value":"/ Shader resource component (SRV). Typically is a view into some texture,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47511,"byte_end":47586,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ but can also be a buffer.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47587,"byte_end":47616,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47617,"byte_end":47658,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"/ - data: `ShaderResourceView<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47659,"byte_end":47694,"line_start":27,"line_end":27,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47922,"byte_end":47939,"line_start":32,"line_end":32,"column_start":12,"column_end":29},"name":"RawShaderResource","qualname":"::pso::resource::RawShaderResource","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) shader resource (SRV).\n - init: `&str` = name of the resource. This may change in the future.\n - data: `RawShaderResourceView`\n","sig":null,"attributes":[{"value":"/ Raw (untyped) shader resource (SRV).","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47760,"byte_end":47800,"line_start":29,"line_end":29,"column_start":1,"column_end":41}},{"value":"/ - init: `&str` = name of the resource. This may change in the future.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47801,"byte_end":47874,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ - data: `RawShaderResourceView`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47875,"byte_end":47910,"line_start":31,"line_end":31,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48256,"byte_end":48271,"line_start":38,"line_end":38,"column_start":12,"column_end":27},"name":"UnorderedAccess","qualname":"::pso::resource::UnorderedAccess","value":"","parent":null,"children":[],"decl_id":null,"docs":" Unordered access component (UAV). A writable resource (texture/buffer)\n with no defined access order across simultaneously executing shaders.\n Supported on DX10 and higher.\n - init: `&str` = name of the resource\n - data: `UnorderedAccessView<T>`\n","sig":null,"attributes":[{"value":"/ Unordered access component (UAV). A writable resource (texture/buffer)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":47983,"byte_end":48057,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/ with no defined access order across simultaneously executing shaders.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48058,"byte_end":48131,"line_start":34,"line_end":34,"column_start":1,"column_end":74}},{"value":"/ Supported on DX10 and higher.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48132,"byte_end":48165,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/ - init: `&str` = name of the resource","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48166,"byte_end":48207,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ - data: `UnorderedAccessView<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48208,"byte_end":48244,"line_start":37,"line_end":37,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48432,"byte_end":48439,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::pso::resource::Sampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" Sampler component.\n - init: `&str` = name of the sampler\n - data: `Sampler`\n","sig":null,"attributes":[{"value":"/ Sampler component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48335,"byte_end":48357,"line_start":39,"line_end":39,"column_start":1,"column_end":23}},{"value":"/ - init: `&str` = name of the sampler","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48358,"byte_end":48398,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ - data: `Sampler`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48399,"byte_end":48420,"line_start":41,"line_end":41,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48897,"byte_end":48911,"line_start":49,"line_end":49,"column_start":12,"column_end":26},"name":"TextureSampler","qualname":"::pso::resource::TextureSampler","value":"","parent":null,"children":[],"decl_id":null,"docs":" A convenience type for a texture paired with a sampler.\n It only makes sense for DX9 class hardware, where every texture by default\n is bundled with a sampler, hence they are represented by the same name.\n In DX10 and higher samplers are totally separated from the textures.\n - init: `&str` = name of the sampler/texture (assuming they match)\n - data: (`ShaderResourceView<T>`, `Sampler`)\n","sig":null,"attributes":[{"value":"/ A convenience type for a texture paired with a sampler.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48478,"byte_end":48537,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/ It only makes sense for DX9 class hardware, where every texture by default","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48538,"byte_end":48616,"line_start":44,"line_end":44,"column_start":1,"column_end":79}},{"value":"/ is bundled with a sampler, hence they are represented by the same name.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48617,"byte_end":48692,"line_start":45,"line_end":45,"column_start":1,"column_end":76}},{"value":"/ In DX10 and higher samplers are totally separated from the textures.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48693,"byte_end":48765,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ - init: `&str` = name of the sampler/texture (assuming they match)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48766,"byte_end":48836,"line_start":47,"line_end":47,"column_start":1,"column_end":71}},{"value":"/ - data: (`ShaderResourceView<T>`, `Sampler`)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48837,"byte_end":48885,"line_start":48,"line_end":48,"column_start":1,"column_end":49}}]},{"kind":"Mod","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"target","qualname":"::pso::target","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","parent":null,"children":[{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":472},{"krate":0,"index":478},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":484},{"krate":0,"index":489},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":501},{"krate":0,"index":505},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":533},{"krate":0,"index":538},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":557},{"krate":0,"index":562},{"krate":0,"index":569},{"krate":0,"index":574},{"krate":0,"index":581},{"krate":0,"index":586},{"krate":0,"index":592},{"krate":0,"index":596},{"krate":0,"index":601}],"decl_id":null,"docs":" Render target components for a PSO.\n","sig":null,"attributes":[{"value":"! Render target components for a PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":53762,"byte_end":53801,"line_start":15,"line_end":15,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":484},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54192,"byte_end":54204,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"RenderTarget","qualname":"::pso::target::RenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component. Typically points to a color-formatted texture.\n - init: `&str` = name of the target\n - data: `RenderTargetView<T>`\n","sig":null,"attributes":[{"value":"/ Render target component. Typically points to a color-formatted texture.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54031,"byte_end":54106,"line_start":24,"line_end":24,"column_start":1,"column_end":76}},{"value":"/ - init: `&str` = name of the target","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54107,"byte_end":54146,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54147,"byte_end":54180,"line_start":26,"line_end":26,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54404,"byte_end":54415,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"BlendTarget","qualname":"::pso::target::BlendTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Render target component with active blending mode.\n - init: (`&str`, `ColorMask`, `Blend` = blending state)\n - data: `RenderTargetView<T>`\n","sig":null,"attributes":[{"value":"/ Render target component with active blending mode.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54244,"byte_end":54298,"line_start":28,"line_end":28,"column_start":1,"column_end":55}},{"value":"/ - init: (`&str`, `ColorMask`, `Blend` = blending state)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54299,"byte_end":54358,"line_start":29,"line_end":29,"column_start":1,"column_end":60}},{"value":"/ - data: `RenderTargetView<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54359,"byte_end":54392,"line_start":30,"line_end":30,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54625,"byte_end":54640,"line_start":35,"line_end":35,"column_start":12,"column_end":27},"name":"RawRenderTarget","qualname":"::pso::target::RawRenderTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Raw (untyped) render target component with optional blending.\n - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)\n - data: `RawRenderTargetView`\n","sig":null,"attributes":[{"value":"/ Raw (untyped) render target component with optional blending.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54453,"byte_end":54518,"line_start":32,"line_end":32,"column_start":1,"column_end":66}},{"value":"/ - init: (`&str`, `Format`, `ColorMask`, `Option<Blend>`)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54519,"byte_end":54579,"line_start":33,"line_end":33,"column_start":1,"column_end":61}},{"value":"/ - data: `RawRenderTargetView`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54580,"byte_end":54613,"line_start":34,"line_end":34,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":497},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54768,"byte_end":54779,"line_start":39,"line_end":39,"column_start":12,"column_end":23},"name":"DepthTarget","qualname":"::pso::target::DepthTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth target component.\n - init: `Depth` = depth state\n - data: `DepthStencilView<T>`\n","sig":null,"attributes":[{"value":"/ Depth target component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54661,"byte_end":54688,"line_start":36,"line_end":36,"column_start":1,"column_end":28}},{"value":"/ - init: `Depth` = depth state","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54689,"byte_end":54722,"line_start":37,"line_end":37,"column_start":1,"column_end":34}},{"value":"/ - data: `DepthStencilView<T>`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54723,"byte_end":54756,"line_start":38,"line_end":38,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":501},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54959,"byte_end":54972,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"StencilTarget","qualname":"::pso::target::StencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Stencil target component.\n - init: `Stencil` = stencil state\n - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)\n","sig":null,"attributes":[{"value":"/ Stencil target component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54800,"byte_end":54829,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/ - init: `Stencil` = stencil state","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54830,"byte_end":54867,"line_start":41,"line_end":41,"column_start":1,"column_end":38}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54868,"byte_end":54947,"line_start":42,"line_end":42,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":505},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55185,"byte_end":55203,"line_start":47,"line_end":47,"column_start":12,"column_end":30},"name":"DepthStencilTarget","qualname":"::pso::target::DepthStencilTarget","value":"","parent":null,"children":[],"decl_id":null,"docs":" Depth + stencil target component.\n - init: (`Depth` = depth state, `Stencil` = stencil state)\n - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)\n","sig":null,"attributes":[{"value":"/ Depth + stencil target component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":54993,"byte_end":55030,"line_start":44,"line_end":44,"column_start":1,"column_end":38}},{"value":"/ - init: (`Depth` = depth state, `Stencil` = stencil state)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55031,"byte_end":55093,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/ - data: (`DepthStencilView<T>`, `(front, back)` = stencil reference values)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55094,"byte_end":55173,"line_start":46,"line_end":46,"column_start":1,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55348,"byte_end":55355,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"Scissor","qualname":"::pso::target::Scissor","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scissor component. Sets up the scissor test for rendering.\n - init: `()`\n - data: `Rect` = target area\n","sig":null,"attributes":[{"value":"/ Scissor component. Sets up the scissor test for rendering.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55224,"byte_end":55286,"line_start":48,"line_end":48,"column_start":1,"column_end":63}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55287,"byte_end":55303,"line_start":49,"line_end":49,"column_start":1,"column_end":17}},{"value":"/ - data: `Rect` = target area","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55304,"byte_end":55336,"line_start":50,"line_end":50,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":512},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55489,"byte_end":55497,"line_start":55,"line_end":55,"column_start":12,"column_end":20},"name":"BlendRef","qualname":"::pso::target::BlendRef","value":"","parent":null,"children":[],"decl_id":null,"docs":" Blend reference component. Sets up the reference color for blending.\n - init: `()`\n - data: `ColorValue`\n","sig":null,"attributes":[{"value":"/ Blend reference component. Sets up the reference color for blending.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55363,"byte_end":55435,"line_start":52,"line_end":52,"column_start":1,"column_end":73}},{"value":"/ - init: `()`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55436,"byte_end":55452,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/ - data: `ColorValue`","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55453,"byte_end":55477,"line_start":54,"line_end":54,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bundle","qualname":"::pso::bundle","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":619}],"decl_id":null,"docs":" Combine slice data with pipeline state.","sig":null,"attributes":[{"value":"! Combine slice data with pipeline state.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61358,"byte_end":61401,"line_start":1,"line_end":1,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61402,"byte_end":61405,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Suitable for use when PSO is always used with the same one slice.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61406,"byte_end":61475,"line_start":3,"line_end":3,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61601,"byte_end":61607,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Bundle","qualname":"::pso::bundle::Bundle","value":"Bundle { slice, pso, data }","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"decl_id":null,"docs":" Slice-PSO bundle.\n","sig":null,"attributes":[{"value":"/ Slice-PSO bundle.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61568,"byte_end":61589,"line_start":8,"line_end":8,"column_start":1,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61669,"byte_end":61674,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"slice","qualname":"::pso::bundle::Bundle::slice","value":"slice::Slice<R>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Slice\n","sig":null,"attributes":[{"value":"/ Slice","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61651,"byte_end":61660,"line_start":10,"line_end":10,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61717,"byte_end":61720,"line_start":13,"line_end":13,"column_start":9,"column_end":12},"name":"pso","qualname":"::pso::bundle::Bundle::pso","value":"pso::PipelineState<R, <Data as pso::PipelineData<R>>::Meta>","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Pipeline state\n","sig":null,"attributes":[{"value":"/ Pipeline state","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61690,"byte_end":61708,"line_start":12,"line_end":12,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":618},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61782,"byte_end":61786,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"data","qualname":"::pso::bundle::Bundle::data","value":"Data","parent":{"krate":0,"index":613},"children":[],"decl_id":null,"docs":" Pipeline data\n","sig":null,"attributes":[{"value":"/ Pipeline data","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61756,"byte_end":61773,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61894,"byte_end":61897,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<Bundle<R, Data>>::new","value":"fn (slice: Slice<R>, pso: PipelineState<R, Data::Meta>, data: Data) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new Bundle\n","sig":null,"attributes":[{"value":"/ Create new Bundle","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61861,"byte_end":61882,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":62128,"byte_end":62134,"line_start":30,"line_end":30,"column_start":12,"column_end":18},"name":"encode","qualname":"<Bundle<R, Data>>::encode","value":"fn <C> (&self, encoder: &mut Encoder<R, C>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Draw bundle using encoder.\n","sig":null,"attributes":[{"value":"/ Draw bundle using encoder.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":62086,"byte_end":62116,"line_start":29,"line_end":29,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":802},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31585,"byte_end":31595,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"RawDataSet","qualname":"::pso::RawDataSet","value":"RawDataSet { vertex_buffers, constant_buffers, global_constants, resource_views, unordered_views, samplers, pixel_targets, ref_values, scissor }","parent":null,"children":[{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":810},{"krate":0,"index":811},{"krate":0,"index":812}],"decl_id":null,"docs":" A complete set of raw data that needs to be specified at run-time\n whenever we draw something with a PSO. This is what \"data\" struct\n gets transformed into when we call `encoder.draw(...)` with it.\n It doesn't have any typing information, since PSO knows what\n format and layout to expect from each resource.\n","sig":null,"attributes":[{"value":"/ A complete set of raw data that needs to be specified at run-time","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31209,"byte_end":31278,"line_start":54,"line_end":54,"column_start":1,"column_end":70}},{"value":"/ whenever we draw something with a PSO. This is what \"data\" struct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31279,"byte_end":31348,"line_start":55,"line_end":55,"column_start":1,"column_end":70}},{"value":"/ gets transformed into when we call `encoder.draw(...)` with it.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31349,"byte_end":31416,"line_start":56,"line_end":56,"column_start":1,"column_end":68}},{"value":"/ It doesn't have any typing information, since PSO knows what","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31417,"byte_end":31481,"line_start":57,"line_end":57,"column_start":1,"column_end":65}},{"value":"/ format and layout to expect from each resource.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31482,"byte_end":31533,"line_start":58,"line_end":58,"column_start":1,"column_end":52}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31534,"byte_end":31556,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":804},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31622,"byte_end":31636,"line_start":62,"line_end":62,"column_start":9,"column_end":23},"name":"vertex_buffers","qualname":"::pso::RawDataSet::vertex_buffers","value":"gfx_core::pso::VertexBufferSet<R>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":805},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31674,"byte_end":31690,"line_start":63,"line_end":63,"column_start":9,"column_end":25},"name":"constant_buffers","qualname":"::pso::RawDataSet::constant_buffers","value":"std::vec::Vec<gfx_core::pso::ConstantBufferParam<R>>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":806},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31737,"byte_end":31753,"line_start":64,"line_end":64,"column_start":9,"column_end":25},"name":"global_constants","qualname":"::pso::RawDataSet::global_constants","value":"std::vec::Vec<(usize, gfx_core::shade::UniformValue)>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":807},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31814,"byte_end":31828,"line_start":65,"line_end":65,"column_start":9,"column_end":23},"name":"resource_views","qualname":"::pso::RawDataSet::resource_views","value":"std::vec::Vec<gfx_core::pso::ResourceViewParam<R>>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":808},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31873,"byte_end":31888,"line_start":66,"line_end":66,"column_start":9,"column_end":24},"name":"unordered_views","qualname":"::pso::RawDataSet::unordered_views","value":"std::vec::Vec<gfx_core::pso::UnorderedViewParam<R>>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":809},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31934,"byte_end":31942,"line_start":67,"line_end":67,"column_start":9,"column_end":17},"name":"samplers","qualname":"::pso::RawDataSet::samplers","value":"std::vec::Vec<gfx_core::pso::SamplerParam<R>>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":810},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31982,"byte_end":31995,"line_start":68,"line_end":68,"column_start":9,"column_end":22},"name":"pixel_targets","qualname":"::pso::RawDataSet::pixel_targets","value":"gfx_core::pso::PixelTargetSet<R>","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":811},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32032,"byte_end":32042,"line_start":69,"line_end":69,"column_start":9,"column_end":19},"name":"ref_values","qualname":"::pso::RawDataSet::ref_values","value":"draw_state::state::RefValues","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":812},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32073,"byte_end":32080,"line_start":70,"line_end":70,"column_start":9,"column_end":16},"name":"scissor","qualname":"::pso::RawDataSet::scissor","value":"draw_state::target::Rect","parent":{"krate":0,"index":802},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32185,"byte_end":32188,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<RawDataSet<R>>::new","value":"fn () -> RawDataSet<R>","parent":null,"children":[],"decl_id":null,"docs":" Create an empty data set.\n","sig":null,"attributes":[{"value":"/ Create an empty data set.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32144,"byte_end":32173,"line_start":74,"line_end":74,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":634},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32711,"byte_end":32716,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"clear","qualname":"<RawDataSet<R>>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clear all contained data.\n","sig":null,"attributes":[{"value":"/ Clear all contained data.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32670,"byte_end":32699,"line_start":88,"line_end":88,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33313,"byte_end":33325,"line_start":106,"line_end":106,"column_start":5,"column_end":17},"name":"VertexImport","qualname":"::pso::InitError::VertexImport","value":"InitError::VertexImport(d::AttributeSlot, Option<d::format::Format>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Vertex attribute mismatch.\n","sig":null,"attributes":[{"value":"/ Vertex attribute mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33278,"byte_end":33308,"line_start":105,"line_end":105,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":821},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33410,"byte_end":33424,"line_start":108,"line_end":108,"column_start":5,"column_end":19},"name":"ConstantBuffer","qualname":"::pso::InitError::ConstantBuffer","value":"InitError::ConstantBuffer(d::ConstantBufferSlot, Option<()>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Constant buffer mismatch.\n","sig":null,"attributes":[{"value":"/ Constant buffer mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33376,"byte_end":33405,"line_start":107,"line_end":107,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":825},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33499,"byte_end":33513,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"GlobalConstant","qualname":"::pso::InitError::GlobalConstant","value":"InitError::GlobalConstant(d::shade::Location, Option<()>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Global constant mismatch.\n","sig":null,"attributes":[{"value":"/ Global constant mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33465,"byte_end":33494,"line_start":109,"line_end":109,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":829},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33590,"byte_end":33602,"line_start":112,"line_end":112,"column_start":5,"column_end":17},"name":"ResourceView","qualname":"::pso::InitError::ResourceView","value":"InitError::ResourceView(d::ResourceViewSlot, Option<()>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Shader resource view mismatch.\n","sig":null,"attributes":[{"value":"/ Shader resource view mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33551,"byte_end":33585,"line_start":111,"line_end":111,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":833},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33681,"byte_end":33694,"line_start":114,"line_end":114,"column_start":5,"column_end":18},"name":"UnorderedView","qualname":"::pso::InitError::UnorderedView","value":"InitError::UnorderedView(d::UnorderedViewSlot, Option<()>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Unordered access view mismatch.\n","sig":null,"attributes":[{"value":"/ Unordered access view mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33641,"byte_end":33676,"line_start":113,"line_end":113,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":837},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33760,"byte_end":33767,"line_start":116,"line_end":116,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::pso::InitError::Sampler","value":"InitError::Sampler(d::SamplerSlot, Option<()>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Sampler mismatch.\n","sig":null,"attributes":[{"value":"/ Sampler mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33734,"byte_end":33755,"line_start":115,"line_end":115,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":841},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33832,"byte_end":33843,"line_start":118,"line_end":118,"column_start":5,"column_end":16},"name":"PixelExport","qualname":"::pso::InitError::PixelExport","value":"InitError::PixelExport(d::ColorSlot, Option<d::format::Format>)","parent":{"krate":0,"index":816},"children":[],"decl_id":null,"docs":" Pixel target mismatch.\n","sig":null,"attributes":[{"value":"/ Pixel target mismatch.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33801,"byte_end":33827,"line_start":117,"line_end":117,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":816},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33262,"byte_end":33271,"line_start":104,"line_end":104,"column_start":10,"column_end":19},"name":"InitError","qualname":"::pso::InitError","value":"InitError::{VertexImport, ConstantBuffer, GlobalConstant, ResourceView, UnorderedView, Sampler, PixelExport}","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":821},{"krate":0,"index":825},{"krate":0,"index":829},{"krate":0,"index":833},{"krate":0,"index":837},{"krate":0,"index":841}],"decl_id":null,"docs":" Failure to initilize the link between the shader and the data.\n","sig":null,"attributes":[{"value":"/ Failure to initilize the link between the shader and the data.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33151,"byte_end":33217,"line_start":102,"line_end":102,"column_start":1,"column_end":67}}]},{"kind":"Trait","id":{"krate":0,"index":639},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35434,"byte_end":35446,"line_start":151,"line_end":151,"column_start":11,"column_end":23},"name":"PipelineInit","qualname":"::pso::PipelineInit","value":"PipelineInit","parent":null,"children":[{"krate":0,"index":640},{"krate":0,"index":641}],"decl_id":null,"docs":" A service trait implemented by the \"init\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ A service trait implemented by the \"init\" structure of PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35360,"byte_end":35423,"line_start":150,"line_end":150,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35496,"byte_end":35500,"line_start":153,"line_end":153,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineInit::Meta","value":"type Meta;","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35453,"byte_end":35486,"line_start":152,"line_end":152,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":641},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35687,"byte_end":35694,"line_start":157,"line_end":157,"column_start":8,"column_end":15},"name":"link_to","qualname":"::pso::PipelineInit::link_to","value":"fn (&self, &mut Descriptor, &d::shade::ProgramInfo) -> Result<Self::Meta, InitError>","parent":{"krate":0,"index":639},"children":[],"decl_id":null,"docs":" Attempt to map a PSO descriptor to a give shader program,\n represented by `ProgramInfo`. Returns an instance of the\n \"meta\" struct upon successful mapping.\n","sig":null,"attributes":[{"value":"/ Attempt to map a PSO descriptor to a give shader program,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35506,"byte_end":35567,"line_start":154,"line_end":154,"column_start":5,"column_end":66}},{"value":"/ represented by `ProgramInfo`. Returns an instance of the","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35572,"byte_end":35632,"line_start":155,"line_end":155,"column_start":5,"column_end":65}},{"value":"/ \"meta\" struct upon successful mapping.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35637,"byte_end":35679,"line_start":156,"line_end":156,"column_start":5,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35866,"byte_end":35878,"line_start":162,"line_end":162,"column_start":11,"column_end":23},"name":"PipelineData","qualname":"::pso::PipelineData","value":"PipelineData<R: d::Resources>","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" a service trait implemented the \"data\" structure of PSO.\n","sig":null,"attributes":[{"value":"/ a service trait implemented the \"data\" structure of PSO.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35795,"byte_end":35855,"line_start":161,"line_end":161,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35945,"byte_end":35949,"line_start":164,"line_end":164,"column_start":10,"column_end":14},"name":"Meta","qualname":"::pso::PipelineData::Meta","value":"type Meta;","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" The associated \"meta\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"meta\" struct.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35902,"byte_end":35935,"line_start":163,"line_end":163,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36075,"byte_end":36082,"line_start":167,"line_end":167,"column_start":8,"column_end":15},"name":"bake_to","qualname":"::pso::PipelineData::bake_to","value":"fn (&self, &mut RawDataSet<R>, meta: &Self::Meta, &mut d::handle::Manager<R>) -> ()","parent":{"krate":0,"index":642},"children":[],"decl_id":null,"docs":" Dump all the contained data into the raw data set,\n given the mapping (\"meta\"), and a handle manager.\n","sig":null,"attributes":[{"value":"/ Dump all the contained data into the raw data set,","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":35955,"byte_end":36009,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"/ given the mapping (\"meta\"), and a handle manager.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36014,"byte_end":36067,"line_start":166,"line_end":166,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":646},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36268,"byte_end":36281,"line_start":171,"line_end":171,"column_start":12,"column_end":25},"name":"PipelineState","qualname":"::pso::PipelineState","value":"","parent":null,"children":[],"decl_id":null,"docs":" A strongly typed Pipleline State Object. See the module documentation for more information.\n","sig":null,"attributes":[{"value":"/ A strongly typed Pipleline State Object. See the module documentation for more information.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36161,"byte_end":36256,"line_start":170,"line_end":170,"column_start":1,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36484,"byte_end":36487,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<PipelineState<R, M>>::new","value":"fn (raw: d::handle::RawPipelineState<R>, prim: d::Primitive, meta: M) -> PipelineState<R, M>","parent":null,"children":[],"decl_id":null,"docs":" Create a new PSO from a raw handle and the \"meta\" instance.\n","sig":null,"attributes":[{"value":"/ Create a new PSO from a raw handle and the \"meta\" instance.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36409,"byte_end":36472,"line_start":175,"line_end":175,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36686,"byte_end":36696,"line_start":181,"line_end":181,"column_start":12,"column_end":22},"name":"get_handle","qualname":"<PipelineState<R, M>>::get_handle","value":"fn (&self) -> &d::handle::RawPipelineState<R>","parent":null,"children":[],"decl_id":null,"docs":" Get a raw handle reference.\n","sig":null,"attributes":[{"value":"/ Get a raw handle reference.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36643,"byte_end":36674,"line_start":180,"line_end":180,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36901,"byte_end":36909,"line_start":186,"line_end":186,"column_start":12,"column_end":20},"name":"get_meta","qualname":"<PipelineState<R, M>>::get_meta","value":"fn (&self) -> &M","parent":null,"children":[],"decl_id":null,"docs":" Get a \"meta\" struct reference. Can be used by the user to check\n what resources are actually used and what not.\n","sig":null,"attributes":[{"value":"/ Get a \"meta\" struct reference. Can be used by the user to check","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36767,"byte_end":36834,"line_start":184,"line_end":184,"column_start":5,"column_end":72}},{"value":"/ what resources are actually used and what not.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36839,"byte_end":36889,"line_start":185,"line_end":185,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":659},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37055,"byte_end":37063,"line_start":193,"line_end":193,"column_start":11,"column_end":19},"name":"DataLink","qualname":"::pso::DataLink","value":"DataLink<'a>: Sized","parent":null,"children":[{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":664},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"decl_id":null,"docs":" The \"link\" logic portion of a PSO component.\n Defines the input data for the component.\n","sig":null,"attributes":[{"value":"/ The \"link\" logic portion of a PSO component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36950,"byte_end":36998,"line_start":191,"line_end":191,"column_start":1,"column_end":49}},{"value":"/ Defines the input data for the component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36999,"byte_end":37044,"line_start":192,"line_end":192,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":661},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37158,"byte_end":37162,"line_start":195,"line_end":195,"column_start":10,"column_end":14},"name":"Init","qualname":"::pso::DataLink::Init","value":"type Init: 'a;","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" The assotiated \"init\" type - a member of the PSO \"init\" struct.\n","sig":null,"attributes":[{"value":"/ The assotiated \"init\" type - a member of the PSO \"init\" struct.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37081,"byte_end":37148,"line_start":194,"line_end":194,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37213,"byte_end":37216,"line_start":197,"line_end":197,"column_start":8,"column_end":11},"name":"new","qualname":"::pso::DataLink::new","value":"fn () -> Self","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Create a new empty data link.\n","sig":null,"attributes":[{"value":"/ Create a new empty data link.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37172,"byte_end":37205,"line_start":196,"line_end":196,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37294,"byte_end":37303,"line_start":199,"line_end":199,"column_start":8,"column_end":17},"name":"is_active","qualname":"::pso::DataLink::is_active","value":"fn (&self) -> bool","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Check if this link is actually used by the shader.\n","sig":null,"attributes":[{"value":"/ Check if this link is actually used by the shader.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37232,"byte_end":37286,"line_start":198,"line_end":198,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37376,"byte_end":37386,"line_start":201,"line_end":201,"column_start":8,"column_end":18},"name":"link_input","qualname":"::pso::DataLink::link_input","value":"fn (&mut self, _: &d::shade::AttributeVar, _: &Self::Init) -> Option<Result<d::pso::AttributeDesc, d::format::Format>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a vertex attribute.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a vertex attribute.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37324,"byte_end":37368,"line_start":200,"line_end":200,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37584,"byte_end":37604,"line_start":204,"line_end":204,"column_start":8,"column_end":28},"name":"link_constant_buffer","qualname":"::pso::DataLink::link_constant_buffer","value":"fn (&mut self, _: &d::shade::ConstantBufferVar, _: &Self::Init) -> Option<Result<(), d::shade::ConstFormat>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a constant buffer.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a constant buffer.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37533,"byte_end":37576,"line_start":203,"line_end":203,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37802,"byte_end":37822,"line_start":207,"line_end":207,"column_start":8,"column_end":28},"name":"link_global_constant","qualname":"::pso::DataLink::link_global_constant","value":"fn (&mut self, _: &d::shade::ConstVar, _: &Self::Init) -> Option<Result<(), d::shade::UniformValue>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a global constant.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a global constant.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37751,"byte_end":37794,"line_start":206,"line_end":206,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38024,"byte_end":38035,"line_start":210,"line_end":210,"column_start":8,"column_end":19},"name":"link_output","qualname":"::pso::DataLink::link_output","value":"fn (&mut self, _: &d::shade::OutputVar, _: &Self::Init) -> Option<Result<d::pso::ColorTargetDesc, d::format::Format>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with an output render target (RTV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an output render target (RTV).","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37961,"byte_end":38016,"line_start":209,"line_end":209,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38244,"byte_end":38262,"line_start":213,"line_end":213,"column_start":8,"column_end":26},"name":"link_depth_stencil","qualname":"::pso::DataLink::link_depth_stencil","value":"fn (&mut self, _: &Self::Init) -> Option<d::pso::DepthStencilDesc>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a depth-stencil target (DSV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a depth-stencil target (DSV).","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38182,"byte_end":38236,"line_start":212,"line_end":212,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38422,"byte_end":38440,"line_start":216,"line_end":216,"column_start":8,"column_end":26},"name":"link_resource_view","qualname":"::pso::DataLink::link_resource_view","value":"fn (&mut self, _: &d::shade::TextureVar, _: &Self::Init) -> Option<Result<(), d::format::Format>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a shader resource (SRV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with a shader resource (SRV).","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38365,"byte_end":38414,"line_start":215,"line_end":215,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38633,"byte_end":38652,"line_start":219,"line_end":219,"column_start":8,"column_end":27},"name":"link_unordered_view","qualname":"::pso::DataLink::link_unordered_view","value":"fn (&mut self, _: &d::shade::UnorderedVar, _: &Self::Init) -> Option<Result<(), d::format::Format>>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with an unordered access (UAV).\n","sig":null,"attributes":[{"value":"/ Attempt to link with an unordered access (UAV).","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38574,"byte_end":38625,"line_start":218,"line_end":218,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38832,"byte_end":38844,"line_start":222,"line_end":222,"column_start":8,"column_end":20},"name":"link_sampler","qualname":"::pso::DataLink::link_sampler","value":"fn (&mut self, _: &d::shade::SamplerVar, _: &Self::Init) -> Option<()>","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to link with a sampler.\n","sig":null,"attributes":[{"value":"/ Attempt to link with a sampler.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38789,"byte_end":38824,"line_start":221,"line_end":221,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":672},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38968,"byte_end":38980,"line_start":224,"line_end":224,"column_start":8,"column_end":20},"name":"link_scissor","qualname":"::pso::DataLink::link_scissor","value":"fn (&mut self) -> bool","parent":{"krate":0,"index":659},"children":[],"decl_id":null,"docs":" Attempt to enable scissor test.\n","sig":null,"attributes":[{"value":"/ Attempt to enable scissor test.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":38925,"byte_end":38960,"line_start":223,"line_end":223,"column_start":5,"column_end":40}}]},{"kind":"Trait","id":{"krate":0,"index":673},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39138,"byte_end":39146,"line_start":229,"line_end":229,"column_start":11,"column_end":19},"name":"DataBind","qualname":"::pso::DataBind","value":"DataBind<R: d::Resources>","parent":null,"children":[{"krate":0,"index":675},{"krate":0,"index":676}],"decl_id":null,"docs":" The \"bind\" logic portion of the PSO component.\n Defines how the user data translates into the raw data set.\n","sig":null,"attributes":[{"value":"/ The \"bind\" logic portion of the PSO component.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39013,"byte_end":39063,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ Defines how the user data translates into the raw data set.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39064,"byte_end":39127,"line_start":228,"line_end":228,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":675},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39247,"byte_end":39251,"line_start":231,"line_end":231,"column_start":10,"column_end":14},"name":"Data","qualname":"::pso::DataBind::Data","value":"type Data;","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":" The associated \"data\" type - a member of the PSO \"data\" struct.\n","sig":null,"attributes":[{"value":"/ The associated \"data\" type - a member of the PSO \"data\" struct.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39170,"byte_end":39237,"line_start":230,"line_end":230,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39311,"byte_end":39318,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"bind_to","qualname":"::pso::DataBind::bind_to","value":"fn (&self, &mut RawDataSet<R>, &Self::Data, &mut d::handle::Manager<R>) -> ()","parent":{"krate":0,"index":673},"children":[],"decl_id":null,"docs":" Dump the given data into the raw data set.\n","sig":null,"attributes":[{"value":"/ Dump the given data into the raw data set.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":39257,"byte_end":39303,"line_start":232,"line_end":232,"column_start":5,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"shade","qualname":"::shade","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":687},{"krate":0,"index":853},{"krate":0,"index":855},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":866},{"krate":0,"index":869},{"krate":0,"index":872},{"krate":0,"index":875},{"krate":0,"index":879},{"krate":0,"index":883},{"krate":0,"index":887},{"krate":0,"index":903},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":897},{"krate":0,"index":688},{"krate":0,"index":690}],"decl_id":null,"docs":" Shaders\n Shader parameter handling.\n","sig":null,"attributes":[{"value":"/ Shaders","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2582,"byte_end":2593,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"! Shader parameter handling.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":62877,"byte_end":62907,"line_start":15,"line_end":15,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":685},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63071,"byte_end":63080,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"name":"ToUniform","qualname":"::shade::ToUniform","value":"ToUniform: Copy","parent":null,"children":[{"krate":0,"index":686}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63038,"byte_end":63060,"line_start":22,"line_end":22,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63096,"byte_end":63103,"line_start":24,"line_end":24,"column_start":8,"column_end":15},"name":"convert","qualname":"::shade::ToUniform::convert","value":"fn (self) -> core::UniformValue","parent":{"krate":0,"index":685},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":888},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63847,"byte_end":63853,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"Vertex","qualname":"::shade::ProgramError::Vertex","value":"ProgramError::Vertex(core::CreateShaderError)","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":" Unable to compile the vertex shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the vertex shader","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63803,"byte_end":63842,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63927,"byte_end":63932,"line_start":59,"line_end":59,"column_start":5,"column_end":10},"name":"Pixel","qualname":"::shade::ProgramError::Pixel","value":"ProgramError::Pixel(core::CreateShaderError)","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":" Unable to compile the pixel shader\n","sig":null,"attributes":[{"value":"/ Unable to compile the pixel shader","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63884,"byte_end":63922,"line_start":58,"line_end":58,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63986,"byte_end":63990,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"Link","qualname":"::shade::ProgramError::Link","value":"ProgramError::Link(core::CreateProgramError)","parent":{"krate":0,"index":887},"children":[],"decl_id":null,"docs":" Unable to link\n","sig":null,"attributes":[{"value":"/ Unable to link","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63963,"byte_end":63981,"line_start":60,"line_end":60,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":887},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63784,"byte_end":63796,"line_start":55,"line_end":55,"column_start":10,"column_end":22},"name":"ProgramError","qualname":"::shade::ProgramError","value":"ProgramError::{Vertex, Pixel, Link}","parent":null,"children":[{"krate":0,"index":888},{"krate":0,"index":891},{"krate":0,"index":894}],"decl_id":null,"docs":" Program linking error\n","sig":null,"attributes":[{"value":"/ Program linking error","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63714,"byte_end":63739,"line_start":53,"line_end":53,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":693},"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\macros\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\macros\\mod.rs","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":703}],"decl_id":null,"docs":" Convenience macros\n Various helper macros.\n","sig":null,"attributes":[{"value":"/ Convenience macros","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2609,"byte_end":2631,"line_start":71,"line_end":71,"column_start":1,"column_end":23}},{"value":"! Various helper macros.","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\macros\\mod.rs","byte_start":65537,"byte_end":65563,"line_start":15,"line_end":15,"column_start":1,"column_end":27}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3919,"byte_end":3930,"line_start":46,"line_end":46,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4396,"byte_end":4407,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5571,"byte_end":5578,"line_start":86,"line_end":86,"column_start":59,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5843,"byte_end":5850,"line_start":96,"line_end":96,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14764,"byte_end":14782,"line_start":42,"line_end":42,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":183}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":15194,"byte_end":15212,"line_start":52,"line_end":52,"column_start":16,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":186}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":15974,"byte_end":15992,"line_start":71,"line_end":71,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16112,"byte_end":16130,"line_start":77,"line_end":77,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16258,"byte_end":16276,"line_start":83,"line_end":83,"column_start":30,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":21582,"byte_end":21583,"line_start":197,"line_end":197,"column_start":53,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25128,"byte_end":25133,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27492,"byte_end":27503,"line_start":131,"line_end":131,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27864,"byte_end":27875,"line_start":142,"line_end":142,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42071,"byte_end":42089,"line_start":69,"line_end":69,"column_start":20,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":312},{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42629,"byte_end":42647,"line_start":86,"line_end":86,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42851,"byte_end":42866,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":43224,"byte_end":43239,"line_start":105,"line_end":105,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":43698,"byte_end":43713,"line_start":120,"line_end":120,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44142,"byte_end":44156,"line_start":134,"line_end":134,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44630,"byte_end":44644,"line_start":149,"line_end":149,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44866,"byte_end":44883,"line_start":156,"line_end":156,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":45396,"byte_end":45413,"line_start":175,"line_end":175,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":45792,"byte_end":45798,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":46351,"byte_end":46357,"line_start":205,"line_end":205,"column_start":50,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48975,"byte_end":48989,"line_start":52,"line_end":52,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":49408,"byte_end":49422,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":420},{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":49657,"byte_end":49674,"line_start":74,"line_end":74,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":50181,"byte_end":50198,"line_start":93,"line_end":93,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":50574,"byte_end":50589,"line_start":104,"line_end":104,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51117,"byte_end":51132,"line_start":123,"line_end":123,"column_start":39,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":442},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51518,"byte_end":51525,"line_start":134,"line_end":134,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51949,"byte_end":51956,"line_start":152,"line_end":152,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":52307,"byte_end":52321,"line_start":163,"line_end":163,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":457},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":52877,"byte_end":52891,"line_start":180,"line_end":180,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55552,"byte_end":55564,"line_start":58,"line_end":58,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":517},{"krate":0,"index":518},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":56147,"byte_end":56159,"line_start":78,"line_end":78,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":524},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":56519,"byte_end":56530,"line_start":88,"line_end":88,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":57019,"byte_end":57030,"line_start":102,"line_end":102,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":57262,"byte_end":57277,"line_start":109,"line_end":109,"column_start":27,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58028,"byte_end":58043,"line_start":133,"line_end":133,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58388,"byte_end":58399,"line_start":143,"line_end":143,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58714,"byte_end":58725,"line_start":152,"line_end":152,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59066,"byte_end":59079,"line_start":160,"line_end":160,"column_start":53,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59398,"byte_end":59411,"line_start":169,"line_end":169,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59838,"byte_end":59856,"line_start":178,"line_end":178,"column_start":58,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60196,"byte_end":60214,"line_start":187,"line_end":187,"column_start":39,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":584},{"krate":0,"index":585}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60610,"byte_end":60617,"line_start":197,"line_end":197,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":588},{"krate":0,"index":589},{"krate":0,"index":590},{"krate":0,"index":591}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60824,"byte_end":60831,"line_start":204,"line_end":204,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":594},{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":61024,"byte_end":61032,"line_start":211,"line_end":211,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":61168,"byte_end":61176,"line_start":217,"line_end":217,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61839,"byte_end":61845,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32124,"byte_end":32134,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":633},{"krate":0,"index":634}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33911,"byte_end":33920,"line_start":121,"line_end":121,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":636}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":34774,"byte_end":34783,"line_start":136,"line_end":136,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":638}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36383,"byte_end":36396,"line_start":174,"line_end":174,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":64043,"byte_end":64055,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":689}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":64431,"byte_end":64443,"line_start":74,"line_end":74,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":691},{"krate":0,"index":692}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2577,"byte_end":2580,"line_start":68,"line_end":68,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":250}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31028,"byte_end":31034,"line_start":42,"line_end":42,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":251}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31044,"byte_end":31052,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":372}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31062,"byte_end":31068,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":467}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":31078,"byte_end":31084,"line_start":45,"line_end":45,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":605}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2602,"byte_end":2607,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src/lib.rs","byte_start":2640,"byte_end":2646,"line_start":72,"line_end":72,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":693}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":3919,"byte_end":3930,"line_start":46,"line_end":46,"column_start":59,"column_end":70},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":704},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":4396,"byte_end":4407,"line_start":57,"line_end":57,"column_start":52,"column_end":63},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":704},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5571,"byte_end":5578,"line_start":86,"line_end":86,"column_start":59,"column_end":66},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":121},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\encoder.rs","byte_start":5843,"byte_end":5850,"line_start":96,"line_end":96,"column_start":47,"column_end":54},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":121},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":14764,"byte_end":14782,"line_start":42,"line_end":42,"column_start":23,"column_end":41},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":15194,"byte_end":15212,"line_start":52,"line_end":52,"column_start":16,"column_end":34},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":724},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":15974,"byte_end":15992,"line_start":71,"line_end":71,"column_start":29,"column_end":47},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16112,"byte_end":16130,"line_start":77,"line_end":77,"column_start":31,"column_end":49},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16258,"byte_end":16276,"line_start":83,"line_end":83,"column_start":30,"column_end":48},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":724},"to":{"krate":2,"index":1823}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":16594,"byte_end":16601,"line_start":91,"line_end":91,"column_start":37,"column_end":44},"kind":"SuperTrait","from":{"krate":19,"index":171},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\factory.rs","byte_start":21582,"byte_end":21583,"line_start":197,"line_end":197,"column_start":53,"column_end":54},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":214},"to":{"krate":0,"index":193}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":25128,"byte_end":25133,"line_start":75,"line_end":75,"column_start":20,"column_end":25},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":743},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27492,"byte_end":27503,"line_start":131,"line_end":131,"column_start":32,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":762},"to":{"krate":2,"index":1893}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\slice.rs","byte_start":27864,"byte_end":27875,"line_start":142,"line_end":142,"column_start":43,"column_end":54},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":762},"to":{"krate":0,"index":237}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42071,"byte_end":42089,"line_start":69,"line_end":69,"column_start":20,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":279},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42629,"byte_end":42647,"line_start":86,"line_end":86,"column_start":42,"column_end":60},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":279},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":42851,"byte_end":42866,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":291},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":43224,"byte_end":43239,"line_start":105,"line_end":105,"column_start":27,"column_end":42},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":291},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":43698,"byte_end":43713,"line_start":120,"line_end":120,"column_start":36,"column_end":51},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":291},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44142,"byte_end":44156,"line_start":134,"line_end":134,"column_start":18,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44630,"byte_end":44644,"line_start":149,"line_end":149,"column_start":17,"column_end":31},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":294},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":44866,"byte_end":44883,"line_start":156,"line_end":156,"column_start":27,"column_end":44},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":299},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":45396,"byte_end":45413,"line_start":175,"line_end":175,"column_start":36,"column_end":53},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":299},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":45792,"byte_end":45798,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\buffer.rs","byte_start":46351,"byte_end":46357,"line_start":205,"line_end":205,"column_start":50,"column_end":56},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":302},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":48975,"byte_end":48989,"line_start":52,"line_end":52,"column_start":30,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":49408,"byte_end":49422,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":389},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":49657,"byte_end":49674,"line_start":74,"line_end":74,"column_start":27,"column_end":44},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":50181,"byte_end":50198,"line_start":93,"line_end":93,"column_start":36,"column_end":53},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":394},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":50574,"byte_end":50589,"line_start":104,"line_end":104,"column_start":30,"column_end":45},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51117,"byte_end":51132,"line_start":123,"line_end":123,"column_start":39,"column_end":54},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":397},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51518,"byte_end":51525,"line_start":134,"line_end":134,"column_start":27,"column_end":34},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":51949,"byte_end":51956,"line_start":152,"line_end":152,"column_start":36,"column_end":43},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":402},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":52307,"byte_end":52321,"line_start":163,"line_end":163,"column_start":30,"column_end":44},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\resource.rs","byte_start":52877,"byte_end":52891,"line_start":180,"line_end":180,"column_start":39,"column_end":53},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":55552,"byte_end":55564,"line_start":58,"line_end":58,"column_start":52,"column_end":64},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":56147,"byte_end":56159,"line_start":78,"line_end":78,"column_start":39,"column_end":51},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":484},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":56519,"byte_end":56530,"line_start":88,"line_end":88,"column_start":51,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":57019,"byte_end":57030,"line_start":102,"line_end":102,"column_start":39,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":489},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":57262,"byte_end":57277,"line_start":109,"line_end":109,"column_start":27,"column_end":42},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":494},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58028,"byte_end":58043,"line_start":133,"line_end":133,"column_start":36,"column_end":51},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":494},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58388,"byte_end":58399,"line_start":143,"line_end":143,"column_start":51,"column_end":62},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":497},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":58714,"byte_end":58725,"line_start":152,"line_end":152,"column_start":39,"column_end":50},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":497},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59066,"byte_end":59079,"line_start":160,"line_end":160,"column_start":53,"column_end":66},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":501},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59398,"byte_end":59411,"line_start":169,"line_end":169,"column_start":39,"column_end":52},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":501},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":59838,"byte_end":59856,"line_start":178,"line_end":178,"column_start":58,"column_end":76},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60196,"byte_end":60214,"line_start":187,"line_end":187,"column_start":39,"column_end":57},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60610,"byte_end":60617,"line_start":197,"line_end":197,"column_start":27,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":60824,"byte_end":60831,"line_start":204,"line_end":204,"column_start":36,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":509},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":61024,"byte_end":61032,"line_start":211,"line_end":211,"column_start":27,"column_end":35},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":512},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\target.rs","byte_start":61168,"byte_end":61176,"line_start":217,"line_end":217,"column_start":36,"column_end":44},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":512},"to":{"krate":0,"index":673}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\bundle.rs","byte_start":61839,"byte_end":61845,"line_start":18,"line_end":18,"column_start":43,"column_end":49},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":32124,"byte_end":32134,"line_start":73,"line_end":73,"column_start":23,"column_end":33},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":33911,"byte_end":33920,"line_start":121,"line_end":121,"column_start":23,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":816},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":34774,"byte_end":34783,"line_start":136,"line_end":136,"column_start":16,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":816},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":36383,"byte_end":36396,"line_start":174,"line_end":174,"column_start":26,"column_end":39},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\pso\\mod.rs","byte_start":37069,"byte_end":37074,"line_start":193,"line_end":193,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":659}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":63082,"byte_end":63086,"line_start":23,"line_end":23,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1913},"to":{"krate":0,"index":685}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":64043,"byte_end":64055,"line_start":64,"line_end":64,"column_start":23,"column_end":35},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":6188}},{"span":{"file_name":"C:\\Users\\Kryssou\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\gfx-0.12.2\\src\\shade.rs","byte_start":64431,"byte_end":64443,"line_start":74,"line_end":74,"column_start":16,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":887},"to":{"krate":1,"index":1642}}]}